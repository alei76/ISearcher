

5. testcase 만들기.. (우선)
	- coverage 확인해 보기. 


8. rescoring 만들기.
	- html의 link의 링크 연결하는 말을 인덱싱 하기(a.href, img.alt) .. 구조에 영향을 많이 미친다.
	- google document boost 조절 handler.. 만들기.(boost값을 재조정 가능하게.)
13. Robot Filter 좀더 General 하게 
10. http://www.compass-project.org/overview.html 이후 확장 방안을 고려해보자. 



restlet 사용성 검토해보기. 
  - 검색과 크롤 가능하도록 노출하기.
  - ICS Data 노출해보기. (List, View) - json, xml, html
  - Database 노출해보기. 
  - 인증 구현해 보기. 




2. myfield 사용 검토. 
   - 4. field . case char 체크.(Case Sensitive함. )
   	 - field 와 value의 sensitive 정책에 대해 생각해 보자.  
   - 6. compress 해보기. 
   - field boost 조절..(html과 db 그리고 ics에 적절한 boost값을 할당한다. 


ICS Data Collector에 이진파일 인덱싱을 한다. 
  - 먼저 선결작업으로 ICS가 이진파일을 제공해주는 URI를 가져야 한다. =ㅅ= (ActionField 만이라면 있긴 하다. )
  
Document를 CRUD를 할수 있는 Rest를 만든다. 


RamDirectory - WorkingIndexer를 만든다.
  
  





done..

crawler에 이진검색을 할수 있도록 한다. 
url을 String이 아니라 Link로 관리한다. 
12. parse setData -> Buffer나 Reader로 바꾸기(append를 안해서 효과가 있을지는 미지수.)
fiter 처리..
  일단 Central에 Map에  filter, CacheWrapperFilter를 만단다. (음 LRU 20개 정도를 유지한다. )
 ISearcher에서 setFilter를 호출하면... Central에 있는걸 가져오거나  새로 만든다.(Central에 Put을 한다. )
 두번째 setFilter를 호출하면.. 역시 위와 동작을 반복하여 ISearch에서 List로 유지한다. 
 
  search 메소드 실행시 ISearch에 있는 Filter 리스트를 And Boolean으로 Request에게 넘긴다. 
  (여기서 정리를 해보면 Search의 setFilter는 공용이고 Request의 Filter는 private 용도로 사용한다고 가정한다. )
   
 

짱가씨쪽 tagHandler 사용 말해주기. 
4. database join query 가능하게 하기.
7. collect name 붙이기  
14 search request abstraction 
10. cancel 만들기. 
11. lib 묶기.. 
9. reader, 
